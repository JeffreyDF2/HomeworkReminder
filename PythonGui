import sys
import subprocess
from PySide6.QtCore import Qt
from PySide6.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, QVBoxLayout, QHBoxLayout, QMessageBox, QTextEdit, QComboBox

# Much of this code is modified code from chatGPT,it is just simple gui, and since this project is meant
# to run in the background the GUI is not important, just a way to get all the information from the user.
class MainWindow(QWidget):
    def __init__(self):
        super().__init__()

        # Create a warning label
        self.warning_label = QLabel(
            "Before running make sure your eClass dashboard is set to display 6 months of assignments and is ordered my courses."
        )

        # Create input fields
        self.first_name_input = QLineEdit()
        self.last_name_input = QLineEdit()
        self.contact_input = QLineEdit()
        self.internet_provider_input = QComboBox()
        self.internet_provider_input.addItems(["AT&T", "Comcast", "Verizon", "Charter Spectrum", "Cox", "Altice", "Mediacom", "Frontier", "Windstream", "Google Fiber"])
        
        self.username_input = QLineEdit()
        self.password_input = QLineEdit()

        # Set the password input to be a password field
        self.password_input.setEchoMode(QLineEdit.Password)

        # Create confirm button
        self.confirm_button = QPushButton("Confirm and Run Program")

        # Create status label
        self.status_label = QLabel("Click Confirm to start the program.")

        # Create layout
        self.layout = QVBoxLayout()

        # Add widgets to layout
        self.layout.addWidget(self.warning_label)
        self.layout.addWidget(QLabel("First Name:"))
        self.layout.addWidget(self.first_name_input)
        self.layout.addWidget(QLabel("Last Name:"))
        self.layout.addWidget(self.last_name_input)
        self.layout.addWidget(QLabel("Email/Phone:"))
        self.layout.addWidget(self.contact_input)
        self.layout.addWidget(QLabel("Internet Provider:"))
        self.layout.addWidget(self.internet_provider_input)
        self.layout.addWidget(QLabel("eClass Username:"))
        self.layout.addWidget(self.username_input)
        self.layout.addWidget(QLabel("eClass Password:"))
        self.layout.addWidget(self.password_input)
        self.layout.addWidget(self.confirm_button)

        # Set the layout
        self.setLayout(self.layout)

        # Connect the confirm button to a function that executes the program
        self.confirm_button.clicked.connect(self.execute_program)

    def execute_program(self):

        self.confirm_button.setEnabled(False)
        # Get the user inputs
        first_name = self.first_name_input.text()
        last_name = self.last_name_input.text()
        contact = self.contact_input.text()
        internet_provider = self.internet_provider_input.currentText()
        username = self.username_input.text()
        password = self.password_input.text()

        # Check that all inputs are valid
        if not all([first_name, last_name, contact, internet_provider, username, password]):
            self.status_label.setText("Please fill in all fields.")
            return
        
        self.status_label.setText("Program is running...")

        # Notify the user that the program is running in the background
        msg_box = QMessageBox()
        msg_box.setWindowTitle("Program Running")
        msg_box.setText("You can minimize this window and let the program run in the background.")
        msg_box.exec_()

        process = subprocess.Popen(["Path to webscraper file", first_name, last_name, contact, internet_provider, password, username], stdout=subprocess.PIPE)

        output, errors = process.communicate()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    app.exec()
    
